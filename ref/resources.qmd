---
title: "Further learning resources"
pagetitle: "PRACS25: Resources"
author: Jelmer Poelstra
date: 2024-08-25
---

---------

<br>

This list of further resources is organized by the main topics covered in this
course -- see the Contents on the left-hand site.

<br>

## Shell

### Books

The first two are available online at the OSU library:

- [The Linux Command Line: A Complete Introduction](https://library.ohio-state.edu/record=b8640501~S7)
  (William Shotts, 2019)

- [Linux Command Line and Shell Scripting Bible](https://library.ohio-state.edu/record=b9161748~S7)
  (Christine Bresnahan, 2015)

- [Command Line Kung Fu: Bash Scripting Tricks, Linux Shell Programming Tips, and Bash One-liners](https://www.amazon.com/dp/1499222033) (Jason Cannon, 2014) 

### Online guides and tutorials

- Nice collections of one-liners, mostly for bioinformatics
  - [By Bonnie I-Man Ng](https://onceupon.github.io/Bash-Oneliner/)
  - [By Stephen Turner](https://github.com/stephenturner/oneliners/blob/master/README.md)
  - [By Tommy Ming](https://github.com/crazyhottommy/bioinformatics-one-liners)
  - [By Amy Williams](http://williamslab.bscb.cornell.edu/?page_id=235)

- [The Bash Guide](http://mywiki.wooledge.org/BashGuide)
  by Maarten Billemont with separate very useful
  [FAQ](http://mywiki.wooledge.org/BashFAQ) and
  [pitfalls](http://mywiki.wooledge.org/BashPitfalls) pages.

- [Bash Guide for Beginners](https://tldp.org/LDP/Bash-Beginners-Guide/html/)
  by Machtel Garrels.

### Further reading

- [Ten simple rules for getting started with command-line bioinformatics](https://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1008645)
  (Brandies & Hogg 2021, PLoS Computational Biology)

- [Five reasons why researchers should learn to love the command line](https://www.nature.com/articles/d41586-021-00263-0)
  (Perkel 2021, Nature)

<br>

## Reproducibility and best practices

- [Good enough practices in scientific computing](https://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1005510)
(Wilson et al. 2017, PLoS Computational Biology)

- [Streamlining data-intensive biology with workflow systems](https://academic.oup.com/gigascience/article/10/1/giaa140/6092773)
  (Reiter et al. 2021, GigaScience)

- [Reproducible Research: A Retrospective](https://pubmed.ncbi.nlm.nih.gov/33467923/)
  (Peng & Hicks 2021, Annu Rev Public Health)

- [Ten Simple Rules for Reproducible Computational Research](https://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1003285)
  (Sandve et al. 2013, PLoS Computational Biology)
  
- [The plain person's guide to plain text social science](https://plain-text.co/)
  (Kieran Healy)
  
<br>

## Git

### Books

I wouldn't necessarily recommend diving so deep into Git as to read a book about
it, but this book provides an excellent reference, is quite accessible,
and is freely available online:

- [Pro Git](http://git-scm.com/book/en/v2) (Chacon & Straub, 2014)

### Online guides and tutorials

#### General

- [An overview of Git tutorials](https://gist.github.com/jaseemabid/1321592)

- [Happy Git and GitHub for the useR](https://happygitwithr.com/)  
  Somewhat R-centric, but a very accessible introduction to Git.

- [Git best practices](https://sethrobertson.github.io/GitBestPractices/) by Seth Robertson

- [Atlassian Git tutorials](https://www.atlassian.com/git/tutorials/what-is-version-control)  
  Atlassian is behind Bitbucket, an alternative to GitHub that also hosts Git
  repositories, and its Git tutorials are very useful.

- A quick [GitHub overview](https://guides.github.com/activities/hello-world/)
  of some Git and GitHub functionality including branching
  and Pull Requests, and how to do these things in your browser at GitHub.
  
#### Interactive practice

- [Git-it](https://github.com/jlord/git-it-electron#git-it) -- a small application to learn and practice Git and GitHub basics.

- [Visualizing Git](http://git-school.github.io/visualizing-git/)  
  These visualizations can help to get some intuition for Git.
  Note that at the prompt, you can only type Git commands and since there are
  no actual files involved, you can't use `git add` -- just commit straight away. 

- [Learn Git branching](https://learngitbranching.js.org/)

#### Undoing

- [Some slides](https://mcic-osu.github.io/pracs-sp21/posts/week-03/slides/03-3_git.html#1)
  on undoing that we did not get to in our Git week.

- [How to undo (almost) anything with Git](https://github.blog/2015-06-08-how-to-undo-almost-anything-with-git/)
  -- by the GitHub blog

- [Oh Shit, Git!?!](https://ohshitgit.com/) -- by Katie Sylor-Miller

- [Git flight rules](https://github.com/k88hudson/git-flight-rules) -- by Kate Hudson.  
  Covers much more than undoing.

### Further reading

- [Excuse me, do you have a moment to talk about version control?](https://peerj.com/preprints/3159/) (Bryan 2017, PeerJ)

- [Ten Simple Rules for Taking Advantage of Git and GitHub](https://journals.plos.org/ploscompbiol/article?id=10.1371%2Fjournal.pcbi.1004947)
  (Perez-Riverol et al. 2016, PLoS Comutational Biology)


<br>

## R

### Books

TBA

### Courses

TBA

<br>

## Nextflow

TBA

#### Further reading

- [Workflow systems turn raw data into scientific knowledge](https://www.nature.com/articles/d41586-019-02619-z)
  (Perkel 2019, Nature "Toolbox" feature).

<br>

## Miscellaneous

### Books similar to CSB and Buffalo

- [A Primer for Computational Biology](https://open.oregonstate.education/computationalbiology/)

- [Practical Computing for Biologists](https://library.ohio-state.edu/record=b6971375~S7)
  (Haddock & Dunn, 2011)

### Genomics and applied bioinformatics

- A few courses on genomic data analysis with lots of great online material available:
  
  - [Introduction to Bioinformatics and Computational Biology by Shirley Liu](https://liulab-dfci.github.io/bioinfo-combio/)
  - [Applied Genomics course by Michael Schatz](https://github.com/schatzlab/appliedgenomics2020)
  - [Applied Computational Genomics course by Aaron Quinlan](https://github.com/quinlan-lab/applied-computational-genomics)

- Sites with online material for many computational biology workshops:

  - [UC Davis Bioinformatics Core](https://ucdavis-bioinformatics-training.github.io/)
  - [Harvard Chan Bioinformatics Core](https://hbctraining.github.io/Training-modules/)
  - [Bioinformatics.ca](https://bioinformaticsdotca.github.io/)
  - [Summer Institute in Statistical Genetics](https://si.biostat.washington.edu/suminst/archives/SISG2020)
  - [Genomics Curriculum of Data Carpentry](https://datacarpentry.org/lessons/#genomics-workshop)
  
- [Rosalind](http://rosalind.info/) -- A website with bioinformatics exercises
